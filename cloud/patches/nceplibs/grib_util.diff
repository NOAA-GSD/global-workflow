diff --git sorc/cnvgrib.fd/compile_cnvgrib_linux.sh sorc/cnvgrib.fd/compile_cnvgrib_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/cnvgrib.fd/compile_cnvgrib_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/cnvgrib.fd/makefile_linux.gnu sorc/cnvgrib.fd/makefile_linux.gnu
new file mode 100755
index 0000000..8c78282
--- /dev/null
+++ sorc/cnvgrib.fd/makefile_linux.gnu
@@ -0,0 +1,59 @@
+SHELL=/bin/sh
+#
+SRCS=	gds2gdt.f pds2pdt.f pds2pdtens.f cnvgrib.f cnv12.f cnv22.f \
+        cnv21.f gdt2gds.f makepds.f putgbexn.f makepdsens.f setbit.f
+OBJS=	gds2gdt.o pds2pdt.o pds2pdtens.o cnvgrib.o cnv12.o cnv22.o \
+        cnv21.o gdt2gds.o makepds.o putgbexn.o makepdsens.o setbit.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		gfortran
+
+#INC= /nwprod/lib/incmod/g2_4
+INC= ${G2_INC4}
+
+#LIBS= -L/nwprod/lib -lg2_4 -lw3nco_4 -lbacio_4 \
+	-ljasper -lpng -lz
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+CMD =		cnvgrib
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -I $(INC) #-axCORE-AVX2
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+all:		$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/cnvgrib.fd/makefile_linux.intel sorc/cnvgrib.fd/makefile_linux.intel
new file mode 100755
index 0000000..bc969cc
--- /dev/null
+++ sorc/cnvgrib.fd/makefile_linux.intel
@@ -0,0 +1,59 @@
+SHELL=/bin/sh
+#
+SRCS=	gds2gdt.f pds2pdt.f pds2pdtens.f cnvgrib.f cnv12.f cnv22.f \
+        cnv21.f gdt2gds.f makepds.f putgbexn.f makepdsens.f setbit.f
+OBJS=	gds2gdt.o pds2pdt.o pds2pdtens.o cnvgrib.o cnv12.o cnv22.o \
+        cnv21.o gdt2gds.o makepds.o putgbexn.o makepdsens.o setbit.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		ftn
+
+#INC= /nwprod/lib/incmod/g2_4
+INC= ${G2_INC4}
+
+#LIBS= -L/nwprod/lib -lg2_4 -lw3nco_4 -lbacio_4 \
+	-ljasper -lpng -lz
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+CMD =		cnvgrib
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -I $(INC) -axCORE-AVX2
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+all:		$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/copygb.fd/compile_copygb_linux.sh sorc/copygb.fd/compile_copygb_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/copygb.fd/compile_copygb_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/copygb.fd/makefile_linux.gnu sorc/copygb.fd/makefile_linux.gnu
new file mode 100755
index 0000000..9e0352e
--- /dev/null
+++ sorc/copygb.fd/makefile_linux.gnu
@@ -0,0 +1,22 @@
+################################################################################
+# This makefile was produced by Boi Vuong 2012/09/06.
+SHELL=	/bin/sh
+CMD=	copygb
+FOPTS=	-g -O3 -fdefault-real-8 -fopenmp
+LOPTS=  -fopenmp
+INCS=	
+OBJS=	copygb.o
+#LIBS= -L/nwprod/lib -lw3nco_d -lbacio_4 -lip_d -lsp_d	
+LIBS=   ${W3NCO_LIBd} ${BACIO_LIB4} ${IP_LIBd} ${SP_LIBd}
+################################################################################
+$(phony all):	$(CMD)
+$(CMD):	$(OBJS)
+	gfortran $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+$(OBJS):	$(INCS)
+copygb.o:	copygb.F
+	gfortran -c $(FOPTS) $*.F
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:	
+	-rm -f $(OBJS)
diff --git sorc/copygb.fd/makefile_linux.intel sorc/copygb.fd/makefile_linux.intel
new file mode 100755
index 0000000..244e6af
--- /dev/null
+++ sorc/copygb.fd/makefile_linux.intel
@@ -0,0 +1,22 @@
+################################################################################
+# This makefile was produced by Boi Vuong 2012/09/06.
+SHELL=	/bin/sh
+CMD=	copygb
+FOPTS=	-g -O3 -r8 -auto -qopenmp
+LOPTS=  -qopenmp
+INCS=	
+OBJS=	copygb.o
+#LIBS= -L/nwprod/lib -lw3nco_d -lbacio_4 -lip_d -lsp_d	
+LIBS=   ${W3NCO_LIBd} ${BACIO_LIB4} ${IP_LIBd} ${SP_LIBd}
+################################################################################
+$(phony all):	$(CMD)
+$(CMD):	$(OBJS)
+	ifort $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+$(OBJS):	$(INCS)
+copygb.o:	copygb.F
+	ifort -c $(FOPTS) $*.F
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:	
+	-rm -f $(OBJS)
diff --git sorc/copygb2.fd/compile_copygb2_linux.sh sorc/copygb2.fd/compile_copygb2_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/copygb2.fd/compile_copygb2_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/copygb2.fd/makefile_linux.gnu sorc/copygb2.fd/makefile_linux.gnu
new file mode 100755
index 0000000..743ee71
--- /dev/null
+++ sorc/copygb2.fd/makefile_linux.gnu
@@ -0,0 +1,61 @@
+################################################################################
+# This makefile was produced by fmjif at 17:21:11 on 97/02/24.
+SHELL=	/bin/sh
+FC =f77
+CMD=	copygb2
+FOPTS=  -O3 -g -fdefault-real-8 -fconvert=big-endian #-auto -mkl
+LOPTS=  -fopenmp #-static-intel -mkl -qopenmp
+INCS= -I${G2_INCd} -I${IP_INCd}
+OBJS  = copygb2.o \
+         polates0.o polatev0.o \
+         polates1.o polatev1.o \
+         polates2.o polatev2.o \
+         polates3.o polatev3.o \
+         polates6.o polatev6.o
+
+LIBS  = ${G2_LIBd} ${W3NCO_LIBd} ${BACIO_LIB4} ${IP_LIBd} ${SP_LIBd}\
+         ${PNG_LIB} ${JASPER_LIB} ${Z_LIB}
+
+################################################################################
+$(phony all):	$(CMD)
+$(CMD):	$(OBJS)
+	$(FC) $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+
+copygb2.o:      copygb2.f
+	$(FC) -c $(INCS) $(FOPTS) $*.f
+
+polates0.o:     polates0.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev0.o:     polatev0.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates1.o:     polates1.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev1.o:     polatev1.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates2.o:     polates2.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev2.o:     polatev2.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates3.o:     polates3.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev3.o:     polatev3.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates6.o:     polates6.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev6.o:     polatev6.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:	
+	-rm -f $(OBJS)
diff --git sorc/copygb2.fd/makefile_linux.intel sorc/copygb2.fd/makefile_linux.intel
new file mode 100755
index 0000000..cf2a8e6
--- /dev/null
+++ sorc/copygb2.fd/makefile_linux.intel
@@ -0,0 +1,61 @@
+################################################################################
+# This makefile was produced by fmjif at 17:21:11 on 97/02/24.
+SHELL=	/bin/sh
+FC =ifort
+CMD=	copygb2
+FOPTS=  -O3 -g -r8 -convert big_endian -auto -mkl
+LOPTS=  -static-intel -mkl -qopenmp
+INCS= -I${G2_INCd} -I${IP_INCd}
+OBJS  = copygb2.o \
+         polates0.o polatev0.o \
+         polates1.o polatev1.o \
+         polates2.o polatev2.o \
+         polates3.o polatev3.o \
+         polates6.o polatev6.o
+
+LIBS  = ${G2_LIBd} ${W3NCO_LIBd} ${BACIO_LIB4} ${IP_LIBd} ${SP_LIBd}\
+         ${PNG_LIB} ${JASPER_LIB} ${Z_LIB}
+
+################################################################################
+$(phony all):	$(CMD)
+$(CMD):	$(OBJS)
+	$(FC) $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+
+copygb2.o:      copygb2.f
+	$(FC) -c $(INCS) $(FOPTS) $*.f
+
+polates0.o:     polates0.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev0.o:     polatev0.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates1.o:     polates1.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev1.o:     polatev1.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates2.o:     polates2.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev2.o:     polatev2.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates3.o:     polates3.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev3.o:     polatev3.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polates6.o:     polates6.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+polatev6.o:     polatev6.f90
+	$(FC) -c $(INCS) $(FOPTS) $<
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:	
+	-rm -f $(OBJS)
diff --git sorc/degrib2.fd/compile_degrib2_linux.sh sorc/degrib2.fd/compile_degrib2_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/degrib2.fd/compile_degrib2_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/degrib2.fd/makefile_linux.gnu sorc/degrib2.fd/makefile_linux.gnu
new file mode 100755
index 0000000..634a392
--- /dev/null
+++ sorc/degrib2.fd/makefile_linux.gnu
@@ -0,0 +1,61 @@
+SHELL=/bin/sh
+#
+SRCS=   degrib2.f prvtime.f prlevel.f
+OBJS=   degrib2.o prvtime.o prlevel.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		gfortran
+#LDFLAGS = -p -bnoquiet -bloadmap:mug
+#LDFLAGS = -pg
+
+#INC= /nwprod/lib/incmod/g2_4
+INC= ${G2_INC4}
+#LIBS= -L/nwprod/lib -lg2_4 -lw3nco_4 -lbacio_4 \
+	-ljasper -lpng -lz
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+
+CMD =		degrib2
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -fconvert=big-endian -I $(INC)
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+	rm -f $(OBJS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+# $(FC) -standard-semantics -assume nostd_mod__proc_name $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/degrib2.fd/makefile_linux.intel sorc/degrib2.fd/makefile_linux.intel
new file mode 100755
index 0000000..c7947d2
--- /dev/null
+++ sorc/degrib2.fd/makefile_linux.intel
@@ -0,0 +1,61 @@
+SHELL=/bin/sh
+#
+SRCS=   degrib2.f prvtime.f prlevel.f
+OBJS=   degrib2.o prvtime.o prlevel.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		ifort
+#LDFLAGS = -p -bnoquiet -bloadmap:mug
+#LDFLAGS = -pg
+
+#INC= /nwprod/lib/incmod/g2_4
+INC= ${G2_INC4}
+#LIBS= -L/nwprod/lib -lg2_4 -lw3nco_4 -lbacio_4 \
+	-ljasper -lpng -lz
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+
+CMD =		degrib2
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -convert big_endian -I $(INC)
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+	rm -f $(OBJS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+# $(FC) -standard-semantics -assume nostd_mod__proc_name $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/grb2index.fd/compile_grb2index_linux.sh sorc/grb2index.fd/compile_grb2index_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/grb2index.fd/compile_grb2index_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/grb2index.fd/makefile_linux.gnu sorc/grb2index.fd/makefile_linux.gnu
new file mode 100755
index 0000000..aae203a
--- /dev/null
+++ sorc/grb2index.fd/makefile_linux.gnu
@@ -0,0 +1,21 @@
+################################################################################
+# This makefile was produced by fmjif at 17:21:11 on 97/02/24.
+SHELL=	/bin/sh
+CMD=	grb2index
+FOPTS=  -g -O3 -fconvert=big-endian
+LOPTS=	
+INCS=	
+OBJS=	grb2index.o
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4}
+################################################################################
+$(phony all):	$(CMD)
+$(CMD):	$(OBJS)
+	f77 $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+$(OBJS):	makefile $(INCS)
+grb2index.o:	grb2index.f
+	f77 -c $(FOPTS) $*.f
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:	
+	-rm -f $(OBJS)
diff --git sorc/grb2index.fd/makefile_linux.intel sorc/grb2index.fd/makefile_linux.intel
new file mode 100755
index 0000000..4d38e9b
--- /dev/null
+++ sorc/grb2index.fd/makefile_linux.intel
@@ -0,0 +1,21 @@
+################################################################################
+# This makefile was produced by fmjif at 17:21:11 on 97/02/24.
+SHELL=	/bin/sh
+CMD=	grb2index
+FOPTS=  -g -O3 -convert big_endian
+LOPTS=	
+INCS=	
+OBJS=	grb2index.o
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4}
+################################################################################
+$(phony all):	$(CMD)
+$(CMD):	$(OBJS)
+	ifort $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+$(OBJS):	makefile $(INCS)
+grb2index.o:	grb2index.f
+	ifort -c $(FOPTS) $*.f
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:	
+	-rm -f $(OBJS)
diff --git sorc/grbindex.fd/compile_grbindex_linux.sh sorc/grbindex.fd/compile_grbindex_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/grbindex.fd/compile_grbindex_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/grbindex.fd/makefile_linux.gnu sorc/grbindex.fd/makefile_linux.gnu
new file mode 100755
index 0000000..d40daa9
--- /dev/null
+++ sorc/grbindex.fd/makefile_linux.gnu
@@ -0,0 +1,21 @@
+################################################################################
+# This makefile was produced by fmjif at 17:21:11 on 97/02/24.
+SHELL=  /bin/sh
+CMD=    grbindex
+FOPTS=  -g -O3 -fconvert=big-endian 
+LOPTS=
+INCS=
+OBJS=   grbindex.o
+LIBS=   ${W3NCO_LIB4} ${BACIO_LIB4}
+################################################################################
+$(phony all):	$(CMD)
+$(CMD): $(OBJS)
+	gfortran $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+$(OBJS):        makefile $(INCS)
+grbindex.o:     grbindex.f
+	gfortran -c $(FOPTS) $*.f
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:
+	-rm -f $(OBJS)
diff --git sorc/grbindex.fd/makefile_linux.intel sorc/grbindex.fd/makefile_linux.intel
new file mode 100755
index 0000000..d6a920d
--- /dev/null
+++ sorc/grbindex.fd/makefile_linux.intel
@@ -0,0 +1,21 @@
+################################################################################
+# This makefile was produced by fmjif at 17:21:11 on 97/02/24.
+SHELL=  /bin/sh
+CMD=    grbindex
+FOPTS=  -g -O3 -assume noold_ldout_format -convert big_endian 
+LOPTS=
+INCS=
+OBJS=   grbindex.o
+LIBS=   ${W3NCO_LIB4} ${BACIO_LIB4}
+################################################################################
+$(phony all):	$(CMD)
+$(CMD): $(OBJS)
+	ifort $(LOPTS) $(OBJS) $(LIBS) -o $(CMD)
+$(OBJS):        makefile $(INCS)
+grbindex.o:     grbindex.f
+	ifort -c $(FOPTS) $*.f
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+clean:
+	-rm -f $(OBJS)
diff --git sorc/grib2grib.fd/compile_grib2grib_linux.sh sorc/grib2grib.fd/compile_grib2grib_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/grib2grib.fd/compile_grib2grib_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/grib2grib.fd/makefile_linux.gnu sorc/grib2grib.fd/makefile_linux.gnu
new file mode 100755
index 0000000..871f52a
--- /dev/null
+++ sorc/grib2grib.fd/makefile_linux.gnu
@@ -0,0 +1,83 @@
+SHELL=/bin/sh
+#
+# This makefile was produced by /usr/bin/fmgen at 12:44:09 PM on 03/12/97
+# If it is invoked by the command line
+#	make -f makefile
+# it will compile the fortran modules indicated by SRCS into the object
+# modules indicated by OBJS and produce an executable named a.out.
+#
+# If it is invoked by the command line
+#	make -f makefile a.out.prof
+# it will compile the fortran modules indicated by SRCS into the object
+# modules indicated by OBJS and produce an executable which profiles
+# named a.out.prof.
+#
+# To remove all the objects but leave the executables use the command line
+#	make -f makefile clean
+#
+# To remove everything but the source files use the command line
+#	make -f makefile clobber
+#
+# To remove the source files created by /usr/bin/fmgen and this makefile
+# use the command line
+#	make -f makefile void
+#
+# The parameters SRCS and OBJS should not need to be changed.  If, however,
+# you need to add a new module add the name of the source module to the
+# SRCS parameter and add the name of the resulting object file to the OBJS
+# parameter.  The new modules are not limited to fortran, but may be C, YACC,
+# LEX, or CAL.  An explicit rule will need to be added for PASCAL modules.
+#
+SRCS=   grib2grib.f hexchar.f
+
+OBJS=   grib2grib.o hexchar.o 
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		gfortran
+LDFLAGS =	
+LIBS=   ${W3NCO_LIB8} ${BACIO_LIB8}
+
+CMD =		grib2grib
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -fdefault-real-8 -fdefault-integer-8
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+	rm -f $(OBJS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/grib2grib.fd/makefile_linux.intel sorc/grib2grib.fd/makefile_linux.intel
new file mode 100755
index 0000000..851bf5a
--- /dev/null
+++ sorc/grib2grib.fd/makefile_linux.intel
@@ -0,0 +1,83 @@
+SHELL=/bin/sh
+#
+# This makefile was produced by /usr/bin/fmgen at 12:44:09 PM on 03/12/97
+# If it is invoked by the command line
+#	make -f makefile
+# it will compile the fortran modules indicated by SRCS into the object
+# modules indicated by OBJS and produce an executable named a.out.
+#
+# If it is invoked by the command line
+#	make -f makefile a.out.prof
+# it will compile the fortran modules indicated by SRCS into the object
+# modules indicated by OBJS and produce an executable which profiles
+# named a.out.prof.
+#
+# To remove all the objects but leave the executables use the command line
+#	make -f makefile clean
+#
+# To remove everything but the source files use the command line
+#	make -f makefile clobber
+#
+# To remove the source files created by /usr/bin/fmgen and this makefile
+# use the command line
+#	make -f makefile void
+#
+# The parameters SRCS and OBJS should not need to be changed.  If, however,
+# you need to add a new module add the name of the source module to the
+# SRCS parameter and add the name of the resulting object file to the OBJS
+# parameter.  The new modules are not limited to fortran, but may be C, YACC,
+# LEX, or CAL.  An explicit rule will need to be added for PASCAL modules.
+#
+SRCS=   grib2grib.f hexchar.f
+
+OBJS=   grib2grib.o hexchar.o 
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		ifort
+LDFLAGS =	
+LIBS=   ${W3NCO_LIB8} ${BACIO_LIB8}
+
+CMD =		grib2grib
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -r8 -i8 -assume noold_ldout_format
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+	rm -f $(OBJS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/install_all_grib_util_linux.sh sorc/install_all_grib_util_linux.sh
new file mode 100755
index 0000000..8a84b73
--- /dev/null
+++ sorc/install_all_grib_util_linux.sh
@@ -0,0 +1,33 @@
+#!/bin/sh
+set -x
+
+wgrib2_ver=2.0.7
+start_dir=$PWD
+
+for dirr in cnvgrib  copygb  degrib2  tocgrib
+#for dirr in copygb2 degrib2 grbindex tocgrib2 tocgrib \
+#            cnvgrib copygb  grb2index grib2grib tocgrib2super
+do
+    echo "starting $dirr"
+    cd $start_dir/${dirr}.fd
+    ./compile_${dirr}_linux.sh |& tee compile_${dirr}_linux.log
+    rm $dirr
+    echo "ending $dirr"
+    cd ..
+done
+
+# Install wgrib
+echo "starting wgrib"
+cd $start_dir/wgrib.cd
+./compile_wgrib_linux.sh |& tee compile_wgrib_linux.log
+rm wgrib
+echo "ending wgrib"
+cd ..
+
+# Install wgrib2
+#echo "starting wgrib2"
+#cd $start_dir/wgrib2_v${wgrib2_ver}
+#./compile_wgrib2_linux.sh ${wgrib2_ver} |& tee compile_wgrib2_linux.log
+#echo "ending wgrib2"
+#cd ../..
+
diff --git sorc/tocgrib.fd/compile_tocgrib_linux.sh sorc/tocgrib.fd/compile_tocgrib_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/tocgrib.fd/compile_tocgrib_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/tocgrib.fd/makefile_linux.gnu sorc/tocgrib.fd/makefile_linux.gnu
new file mode 100755
index 0000000..cd793f0
--- /dev/null
+++ sorc/tocgrib.fd/makefile_linux.gnu
@@ -0,0 +1,54 @@
+SHELL=/bin/sh
+#
+SRCS=	makwmo.f mkfldsep.f tocgrib.f
+
+OBJS=	makwmo.o mkfldsep.o tocgrib.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =            gfortran
+LDFLAGS =	
+#LIBS= -L/nwprod/lib -lw3nco_4 -lbacio_4
+LIBS=   ${W3NCO_LIB4} ${BACIO_LIB4}
+CMD =		tocgrib
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O2
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/tocgrib.fd/makefile_linux.intel sorc/tocgrib.fd/makefile_linux.intel
new file mode 100755
index 0000000..d72efa5
--- /dev/null
+++ sorc/tocgrib.fd/makefile_linux.intel
@@ -0,0 +1,54 @@
+SHELL=/bin/sh
+#
+SRCS=	makwmo.f mkfldsep.f tocgrib.f
+
+OBJS=	makwmo.o mkfldsep.o tocgrib.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =            ifort
+LDFLAGS =	
+#LIBS= -L/nwprod/lib -lw3nco_4 -lbacio_4
+LIBS=   ${W3NCO_LIB4} ${BACIO_LIB4}
+CMD =		tocgrib
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O2 -assume noold_ldout_format
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/tocgrib2.fd/compile_tocgrib2_linux.sh sorc/tocgrib2.fd/compile_tocgrib2_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/tocgrib2.fd/compile_tocgrib2_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/tocgrib2.fd/makefile_linux.gnu sorc/tocgrib2.fd/makefile_linux.gnu
new file mode 100755
index 0000000..debafd4
--- /dev/null
+++ sorc/tocgrib2.fd/makefile_linux.gnu
@@ -0,0 +1,58 @@
+SHELL=/bin/sh
+#
+SRCS=	tocgrib2.f
+
+OBJS=	tocgrib2.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		gfortran
+
+INC= ${G2_INC4}
+
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+
+LDFLAGS =	
+
+CMD =		tocgrib2
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -I$(INC)
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/tocgrib2.fd/makefile_linux.intel sorc/tocgrib2.fd/makefile_linux.intel
new file mode 100755
index 0000000..74a8624
--- /dev/null
+++ sorc/tocgrib2.fd/makefile_linux.intel
@@ -0,0 +1,58 @@
+SHELL=/bin/sh
+#
+SRCS=	tocgrib2.f
+
+OBJS=	tocgrib2.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =		ifort
+
+INC= ${G2_INC4}
+
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+
+LDFLAGS =	
+
+CMD =		tocgrib2
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O3 -I$(INC)
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/tocgrib2super.fd/compile_tocgrib2super_linux.sh sorc/tocgrib2super.fd/compile_tocgrib2super_linux.sh
new file mode 100755
index 0000000..cf9e3c9
--- /dev/null
+++ sorc/tocgrib2super.fd/compile_tocgrib2super_linux.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+make -f $makefile clean
+
diff --git sorc/tocgrib2super.fd/makefile_linux.gnu sorc/tocgrib2super.fd/makefile_linux.gnu
new file mode 100755
index 0000000..ce5e7fb
--- /dev/null
+++ sorc/tocgrib2super.fd/makefile_linux.gnu
@@ -0,0 +1,55 @@
+<HELL=/bin/sh
+#
+SRCS=	tocgrib2super.f makwmo.f
+
+OBJS=	tocgrib2super.o makwmo.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =            gfortran
+
+INC= ${G2_INC4}
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+
+CMD =		tocgrib2super
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O2 -I $(INC)
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/tocgrib2super.fd/makefile_linux.intel sorc/tocgrib2super.fd/makefile_linux.intel
new file mode 100755
index 0000000..d912796
--- /dev/null
+++ sorc/tocgrib2super.fd/makefile_linux.intel
@@ -0,0 +1,55 @@
+<HELL=/bin/sh
+#
+SRCS=	tocgrib2super.f makwmo.f
+
+OBJS=	tocgrib2super.o makwmo.o
+
+# Tunable parameters
+#
+# FC		Name of the fortran compiling system to use
+# LDFLAGS	Flags to the loader
+# LIBS		List of libraries
+# CMD		Name of the executable
+# PROFLIB	Library needed for profiling
+#
+FC =            ifort
+
+INC= ${G2_INC4}
+LIBS=   ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
+
+CMD =		tocgrib2super
+PROFLIB =	-lprof
+
+# To perform the default compilation, use the first line
+# To compile with flowtracing turned on, use the second line
+# To compile giving profile additonal information, use the third line
+# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
+FFLAGS =        -g -O2 -assume noold_ldout_format -I $(INC)
+#FFLAGS =	 -F
+#FFLAGS =	 -Wf"-ez"
+
+# Lines from here on down should not need to be changed.  They are the
+# actual rules which make uses to build a.out.
+#
+$(phony all):	$(CMD)
+
+$(CMD):		$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)
+
+# Make the profiled version of the command and call it a.out.prof
+#
+$(CMD).prof:	$(OBJS)
+	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)
+
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
+clean:
+	-rm -f $(OBJS)
+
+clobber:	clean
+	-rm -f $(CMD) $(CMD).prof
+
+void:	clobber
+	-rm -f $(SRCS) makefile
diff --git sorc/wgrib.cd/compile_wgrib_linux.sh sorc/wgrib.cd/compile_wgrib_linux.sh
new file mode 100755
index 0000000..7d03b2a
--- /dev/null
+++ sorc/wgrib.cd/compile_wgrib_linux.sh
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+machine_lc=${machine_lc:-linux.gnu}
+makefile=makefile_${machine_lc}
+
+make -f $makefile
+make -f $makefile install
+
diff --git sorc/wgrib.cd/makefile_linux.gnu sorc/wgrib.cd/makefile_linux.gnu
new file mode 100755
index 0000000..6329d13
--- /dev/null
+++ sorc/wgrib.cd/makefile_linux.gnu
@@ -0,0 +1,9 @@
+# make for wgrib
+CMD = wgrib
+$(phony all):	$(CMD)
+wgrib:	wgrib.c
+	gcc -O3 -m64 -o wgrib -DDEF_T62_NCEP_TABLE=opn -DFAST_GRIBTAB -DP_TABLE_FIRST wgrib.c
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
diff --git sorc/wgrib.cd/makefile_linux.intel sorc/wgrib.cd/makefile_linux.intel
new file mode 100755
index 0000000..4f57028
--- /dev/null
+++ sorc/wgrib.cd/makefile_linux.intel
@@ -0,0 +1,9 @@
+# make for wgrib
+CMD = wgrib
+$(phony all):	$(CMD)
+wgrib:	wgrib.c
+	icc -O3 -m64 -o wgrib -DDEF_T62_NCEP_TABLE=opn -DFAST_GRIBTAB -DP_TABLE_FIRST wgrib.c
+install:
+	mkdir -p ../../exec
+	cp -p $(CMD) ../../exec
+
diff --git sorc/wgrib2_v2.0.7/compile_wgrib2_linux.sh sorc/wgrib2_v2.0.7/compile_wgrib2_linux.sh
new file mode 100755
index 0000000..e69de29
